plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.5'
  id 'io.spring.dependency-management' version '1.1.3'
  id 'maven-publish'
  id 'com.diffplug.spotless' version '6.8.0'
}

group = 'com.amazon.service'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'

  runtimeOnly 'org.postgresql:r2dbc-postgresql'
  runtimeOnly 'org.flywaydb:flyway-core'
  runtimeOnly 'org.postgresql:postgresql'
  runtimeOnly 'org.springframework:spring-jdbc'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:r2dbc'
}

tasks.named('test') {
  useJUnitPlatform()
}
springBoot {
  buildInfo()
}
publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact bootJar
    }
  }
}
spotless {

  format 'misc', {
    // define the files to apply 'misc' to
    target '*.gradle', '*.md', '.gitignore'

    // define the steps to apply to those files
    trimTrailingWhitespace()
    indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
    endWithNewline()
  }

  java {// to customize, go to https://github.com/diffplug/spotless/tree/main/plugin-gradle#java

    target 'src/*/java/**/*.java'

    // Use the default importOrder configuration
    importOrder()

    // Clean up
    removeUnusedImports()

    // Apply google-java-format formatter
    googleJavaFormat()
  }
}
